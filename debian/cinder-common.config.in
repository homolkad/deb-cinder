#!/bin/sh

set -e

. /usr/share/debconf/confmodule
CINDER_COM_DEF=/etc/default/cinder-common
CINDER_CONF=/etc/cinder/cinder.conf
CINDER_API=/etc/cinder/api-paste.ini

#PKGOS-INCLUDE#

manage_cinder_enable () {
	pkgos_read_config -sh ${CINDER_COM_DEF} CINDER_ENABLE cinder/start_services
	CINDER_ENABLE=${RET}
	if ! [ "${CINDER_ENABLE}" = "false" ] ; then
		CINDER_ENABLE=true
	fi
	# Write a default config file
	echo "# defaults file for cinder daemons

# start cinder daemons from init.d script?
#  only allowed values are \"true\" and \"false\"
CINDER_ENABLE=${CINDER_ENABLE}" >${CINDER_COM_DEF}	
}

pkgos_var_user_group cinder
pkgos_dbc_read_conf -pkg cinder-common ${CINDER_CONF} cinder DEFAULT sql_connection $@
pkgos_read_admin_creds ${CINDER_API} cinder filter:authtoken
manage_cinder_enable

pkgos_get_config ${CINDER_CONF} volume_group DEFAULT
if [ -n "${RET}" ] ; then
	db_set cinder/volume_group "${RET}"
else
	db_get cinder/volume_group
	if [ -z "${RET}" ] && [ -x /sbin/vgdisplay ] ; then
		# Since we have no prior value, try to guess it from vgdisplay
		VGDISP=`vgdisplay -c | head -n 1`
		if [ -n "${VGDISP}" ] ; then
			VGNAME=`echo ${VGDISP} | cut -d: -f1`
			db_set cinder/volume_group ${VGNAME}
		fi
	fi
fi
db_input high cinder/volume_group || true
db_go

exit 0
